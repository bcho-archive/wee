// Token from https://github.com/twitter/bootstrap/blob/master/less/mixins.less#L547
#grid {
  .fixed(@grid_column_width, @grid_gutter_width) {
    .spanX(@index) when (@index > 0) {
      (~".span@{index}") {.span(@index);}
      .spanX(@index-1); // next one
    }
    .spanX(0) {} // just stop

    .offsetX(@index) when (@index > 0) {
      (~".offset@{index}") {.offset(@index);}
      .offsetX(@index-1);
    }
    .offsetX(0) {}

    .row {
      margin-left: -@grid_gutter_width;
      .clearfix();
    }

    [class*="span"] {
      float: left;
      margin-left: @grid_gutter_width;
    }

    .span(@columns) {
      width: @grid_column_width * @columns + @grid_gutter_width * (@columns - 1);
    }

    .offset(@columns) {
      margin-left: @grid_column_width * @columns + @grid_gutter_width * (@columns + 1);
    }

    .container {
      .span(@grid_columns);
    }

    .spanX(@grid_columns);
    .offsetX(@grid_columns);
  }

  .fluid(@fluid_column_width, @fluid_gutter_width) {
    .spanX(@index) when (@index > 0) {
      (~".fluid-row .span@{index}") {.span(@index);}
      .spanX(@index - 1);
    }
    .spanX(0) {}

    .span(@columns) {
      width: @fluid_column_width * @columns + @fluid_gutter_width * (@columns - 1);
    }

    .fluid-row {
      width: 100%;
      .clearfix();
      [class*="span"] {
        float: left;
        margin-left: @fluid_gutter_width;
      }
    }

    [class*="fluid_span"]:first-child {
      margin-left: 0;
    }

    .spanX(@grid_columns);
  }
}

#grid > .fixed(@grid_column_width, @grid_gutter_width);
#grid > .fluid(@fluid_column_width, @fluid_gutter_width);
